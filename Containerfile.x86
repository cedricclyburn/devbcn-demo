# Simplified x86_64 Containerfile for production deployment
# Expects frontend to be pre-built locally to avoid cross-compilation issues
# Run: npm run build in frontend/ directory before building this container

FROM --platform=linux/amd64 python:3.12-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy and install Python dependencies
COPY backend/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY backend/ ./backend/
COPY frontend/dist/ ./frontend/dist/
COPY static/ ./static/

# Create a non-root user
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Create healthcheck script
RUN echo '#!/bin/bash\ncurl -f http://localhost:8000/ || exit 1' > /healthcheck.sh && \
    chmod +x /healthcheck.sh

# OpenShift compatibility: make directories writable by group 0
RUN chgrp -R 0 /app && \
    chmod -R g=u /app && \
    chgrp -R 0 /healthcheck.sh && \
    chmod -R g=u /healthcheck.sh

RUN chown -R appuser:appuser /app
USER appuser

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK CMD /healthcheck.sh

# Run the application using python -m to avoid exec format errors
CMD ["python", "-m", "uvicorn", "backend.main:app", "--host", "0.0.0.0", "--port", "8000"] 